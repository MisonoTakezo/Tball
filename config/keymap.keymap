#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "tap-preferred";
    quick-tap-ms = <0>;
    tapping-term-ms = <300>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&mt LEFT_ALT Q    &kp W  &kp E  &kp R  &kp T     &kp Y              &kp U            &kp I  &kp O  &kp P
&kp A             &kp S  &kp D  &kp F  &kp TAB   &mt RIGHT_SHIFT H  &mkp MB1         &kp K  &kp L  &kp BACKSPACE
&mt LEFT_SHIFT Z  &kp X  &kp C  &kp V  &lt 2 B   &lt 5 N            &kp M            &kp G  &kp J  &kp RETURN
&mo 4             &mo 2  &mo 3  &mo 1  &kp LCMD  &mt RCTRL SPACE    &kp RIGHT_SHIFT                &mo 3
            >;
        };

        layer_1 {
            bindings = <
&none       &none           &kp UP_ARROW    &none            &none      &none      &none      &none                 &kp RS(RG(NUMBER_4))   &kp RS(RG(N5))
&kp ESCAPE  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LA(V)  &none      &mkp MB2   &none                 &none                  &none
&none       &none           &none           &none            &kp LA(Z)  &none      &none      &kp RG(LEFT_BRACKET)  &kp RG(RIGHT_BRACKET)  &kp RS(RG(NUMBER_2))
&none       &none           &none           &none            &none      &kp LANG2  &kp LANG1                                               &none
            >;
        };

        layer_2 {
            bindings = <
&none  &none                   &kp LS(LG(UP_ARROW))    &none                    &none  &none  &kp RA(RS(B))       &kp RA(UP_ARROW)  &kp RA(RS(C))        &none
&none  &kp LS(LG(LEFT_ARROW))  &kp LS(LG(DOWN_ARROW))  &kp LS(LG(RIGHT_ARROW))  &none  &none  &kp RA(LEFT_ARROW)  &kp RA(RS(A))     &kp RA(RIGHT_ARROW)  &none
&none  &none                   &none                   &none                    &none  &none  &none               &none             &none                &none
&none  &none                   &none                   &none                    &none  &none  &none                                                      &none
            >;
        };

        layer_3 {
            bindings = <
&none         &none         &none         &none         &kp SLASH  &kp BACKSLASH  &kp SEMI   &kp SQT     &kp MINUS         &kp EQUAL
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5     &kp NUMBER_6   &kp N7     &kp N8      &kp N9            &kp N0
&none         &none         &none         &none         &none      &kp GRAVE      &kp COMMA  &kp PERIOD  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&none         &none         &none         &none         &none      &none          &none                                    &none
            >;
        };

        layer_4 {
            bindings = <
&trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans  &trans                  &bt BT_CLR
            >;
        };

        layer_5 {
            bindings = <
&trans   &trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&kp F11  &kp F12  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans   &trans   &trans  &trans  &trans  &trans  &trans                  &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                  &trans
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                  &trans
            >;
        };
    };
};
